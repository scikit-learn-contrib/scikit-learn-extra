jobs:

- job: 'linux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        NUMPY_VERSION: "1.16.5"
        SCIPY_VERSION: "1.1.0"
        SKLEARN_VERSION: "0.24.1"
      Python38:
        python.version: '3.8'
        NUMPY_VERSION: "1.19.4"
        SCIPY_VERSION: "1.4.1"
        SKLEARN_VERSION: "0.24.1"
      Python39:
        python.version: '3.9'
        NUMPY_VERSION: "1.19.4"
        SCIPY_VERSION: "1.5.4"
        SKLEARN_VERSION: "nightly"
      Py39_sklearn1:
        python.version: '3.9'
        NUMPY_VERSION: "1.19.4"
        SCIPY_VERSION: "1.5.4"
        SKLEARN_VERSION: "1.0.0"

  variables:
    OMP_NUM_THREADS: '2'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      if [[ "$SKLEARN_VERSION" == "nightly" ]]; then
          # This also installs latest numpy, scipy and joblib.
          pip install --pre scikit-learn
      else
          python -m pip install numpy==$NUMPY_VERSION scipy==$SCIPY_VERSION scikit-learn==$SKLEARN_VERSION
      fi
    displayName: 'Install dependencies'

  - script: |
      set -xe
      pip install -e .
    displayName: 'Install scikit-learn-extra'

  - script: |
      set -xe
      python -m pip install pytest pytest-azurepipelines pytest-cov codecov
      # run doctests in the documentation
      # TODO: remove "|| .." once at least one doctest is added
      python -m pytest doc/*rst doc/modules/*rst || echo "Ignoring exit status"
      python -m pytest --durations 10 --cov=sklearn_extra sklearn_extra
    displayName: 'Test'

  - script: codecov -t $CODECOV_TOKEN || echo "codecov upload failed"
    displayName: 'Upload coverage report'
    env:
      CODECOV_TOKEN: $(CODECOV_TOKEN)

- job: 'macOS1014'
  pool:
    vmImage: 'macOS-10.14'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        NUMPY_VERSION: "1.16.5"
        SCIPY_VERSION: "1.1.0"
        SKLEARN_VERSION: "0.24.1"
      Python38:
        python.version: '3.8'
        SKLEARN_VERSION: "*"
      Py39_sklearn1:
        python.version: '3.9'
        NUMPY_VERSION: "1.19.4"
        SCIPY_VERSION: "1.5.4"
        SKLEARN_VERSION: "1.0.0"
  variables:
    OMP_NUM_THREADS: '2'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      if [[ "$SKLEARN_VERSION" == "*" ]]; then
          # Install latest versions of dependencies.
          python -m pip install scikit-learn
      else
          python -m pip install numpy==$NUMPY_VERSION scipy==$SCIPY_VERSION scikit-learn==$SKLEARN_VERSION
      fi
    displayName: 'Install dependencies'

  - script: |
      set -xe
      pip install -e .
    displayName: 'Install scikit-learn-extra'

  - script: |
      set -xe
      python -m pip install pytest pytest-azurepipelines pytest pytest-cov codecov
      python -m pytest --durations 10 --cov=sklearn_extra sklearn_extra
    displayName: 'Test'

  - script: codecov -t $CODECOV_TOKEN || echo "codecov upload failed"
    displayName: 'Upload coverage report'
    env:
      CODECOV_TOKEN: $(CODECOV_TOKEN)


- job: 'win2016'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python38:
        python_ver: '38'
        python.version: '3.8'
        NUMPY_VERSION: "1.18.2"
        SCIPY_VERSION: "1.4.1"
        SKLEARN_VERSION: "0.24.1"
      Py39_sklearn1:
        python.version: '3.9'
        NUMPY_VERSION: "1.19.4"
        SCIPY_VERSION: "1.5.4"
        SKLEARN_VERSION: "1.0.0"

  variables:
    OMP_NUM_THREADS: '2'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      python --version
      python -m pip install --upgrade pip
      python -m pip install numpy==%NUMPY_VERSION% scipy==%SCIPY_VERSION% scikit-learn==%SKLEARN_VERSION%
    displayName: 'Install dependencies'

  - script: |
      pip wheel . -w dist\
      pip install --pre --no-index --find-links dist\ scikit-learn-extra
    displayName: 'Install scikit-learn-extra'

  - script: |
      cd ..
      python -m pip install pytest pytest-azurepipelines pytest-cov codecov
      python -m pytest --durations 10 --pyargs --cov=sklearn_extra sklearn_extra
    displayName: 'Test'

  - script: codecov -t %CODECOV_TOKEN% || echo "codecov upload failed"
    displayName: 'Upload coverage report'
    env:
      CODECOV_TOKEN: $(CODECOV_TOKEN)
